@use "sass:map";

@import "_base";
@import "_variables";
@import "_fonts";
@import "_colors";
@import "_grid";
@import "_border";
@import "_spacing";
@import "_table";
@import "_sizing";

// box sizing
.box-border {
  box-sizing: border-box;
}

.box-content {
  box-sizing: content-box;
}

// overflow
$overflows: auto, hidden, clip, visible, scroll;
@each $overflow in $overflows {
  .overflow-#{$overflow} {
    overflow: $overflow;
  }

  .overflow-x-#{$overflow} {
    overflow-x: $overflow;
  }

  .overflow-y-#{$overflow} {
    overflow-y: $overflow;
  }
}

// display
$displays: block, inline-block, inline, flex, inline-flex, table, inline-table,
  table-caption, table-cell, table-column, table-column-group,
  table-footer-group, table-header-group, table-row-group, table-row, flow-root,
  grid, inline-grid, contents, list-item, hidden;
@each $display in $displays {
  @if $display == "hidden" {
    .#{$display} {
      display: none;
    }
  } @else {
    .#{$display} {
      display: $display;
    }
  }
}

// index
$index: 0, 10, 20, 30, 40, 50, auto;
@each $item in $index {
  .z-#{$item} {
    z-index: $item;
  }
}

// visibility
$visibilities: visible, hidden, collapse;
@each $visibility in $visibilities {
  @if $visibility == "hidden" {
    .invisible {
      visibility: hidden;
    }
  } @else {
    .#{$visibility} {
      visibility: $visibility;
    }
  }
}

// positions
$positions: static, fixed, absolute, relative, sticky;
@each $position in $positions {
  .#{$position} {
    position: $position;
  }
}

@each $item in $spacing {
  .top-#{map.get($item, "label")} {
    top: map.get($item, "value");
  }

  .bottom-#{map.get($item, "label")} {
    bottom: map.get($item, "value");
  }

  .left-#{map.get($item, "label")} {
    left: map.get($item, "value");
  }

  .right-#{map.get($item, "label")} {
    right: map.get($item, "value");
  }
}

// scroll behavior
$scrolls: auto, smooth;
@each $scroll in $scrolls {
  .scroll-#{$scroll} {
    scroll-behavior: $scroll;
  }
}

$behaviors: auto, contain, none;
@each $behavior in $behaviors {
  .overscroll-#{$behavior} {
    overscroll-behavior: $behavior;
  }

  .overscroll-y-#{$behavior} {
    overscroll-behavior-y: $behavior;
  }

  .overscroll-x-#{$behavior} {
    overscroll-behavior-x: $behavior;
  }
}

$object-position: bottom, center, left, right, top;
@each $item in $object-position {
  .object-#{$item} {
    object-position: $item;
  }
  @if $item == "left" or $item == "right" {
    .object-#{$item}-top {
      object-position: $item top;
    }
    .object-#{$item}-bottom {
      object-position: $item bottom;
    }
  }
}

$object-fit: contain, cover, fill, none, scale-down;
@each $item in $object-fit {
  .object-#{$item} {
    object-fit: $item;
  }
}

.aspect-auto {
  aspect-ratio: auto;
}
.aspect-square {
  aspect-ratio: 1 / 1;
}
.aspect-video {
  aspect-ratio: 16 / 9;
}

// list style
.list-inside {
  list-style-position: inside;
}
.list-outside {
  list-style-position: outside;
}
.list-none {
  list-style-type: none;
}
.list-disc {
  list-style-type: disc;
}
.list-decimal {
  list-style-type: decimal;
}
